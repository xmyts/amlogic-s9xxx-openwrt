name: Build ImmortalWrt Rootfs with Plugins

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: true
        default: "immortalwrt-master"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-master
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.12.y

env:
  # 配置文件路径：遵循原始工作流的"config/源分支名/文件名"结构
  CONFIG_FILE: config/${{ inputs.source_branch }}/config-immortalwrt
  TZ: America/New_York
  THIRD_PARTY_FEED: "src-git NueXini_Packages https://github.com/NueXini/NueXini_Packages.git"

jobs:
  build-rootfs:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment (full dependencies)
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # 清理冗余文件
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile

          # 安装完整依赖
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
          sudo -E apt-get -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget

          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clone ImmortalWrt source code
        id: codes
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          # 根据分支选择源码
          if [[ "${{ inputs.source_branch }}" == "immortalwrt-master" ]]; then
            REPO_URL="https://github.com/immortalwrt/immortalwrt"
            REPO_BRANCH="master"
            TAGS_NAME="immortalwrt"
          else
            echo "Unsupported source branch"
            exit 1
          fi

          # 克隆源码
          git clone --single-branch --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          cd openwrt
          # 添加第三方插件源
          echo "${{ env.THIRD_PARTY_FEED }}" >> feeds.conf.default

          # 输出标签信息
          echo "build_tag=ImmortalWrt_Rootfs_${{ inputs.openwrt_kernel }}_$(date +"%Y%m%d")" >> ${GITHUB_OUTPUT}
          echo "REPO_URL=${REPO_URL}" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Update and install feeds
        run: |
          cd openwrt/
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          # 安装第三方插件依赖
          ./scripts/feeds install -p NueXini_Packages adbyby atinout cellled clouddrive2 HomeRedirect modeminfo pingcontrol pppwn-cpp telegrambot tun2socks xmm-modem

      - name: Load custom configuration (config-immortalwrt)
        run: |
          # 检查配置文件是否存在（关键修正：使用实际路径）
          if [[ -f "${{ env.CONFIG_FILE }}" ]]; then
            echo "找到配置文件：${{ env.CONFIG_FILE }}"
            cp -f ${{ env.CONFIG_FILE }} openwrt/.config
          else
            echo "错误：未找到配置文件，实际路径：${{ env.CONFIG_FILE }}"
            # 显示目录结构帮助排查
            echo "当前仓库的config目录结构："
            tree config/
            exit 1
          fi

          # 确认rootfs生成选项已启用
          cd openwrt/
          make defconfig
          if ! grep -q "CONFIG_TARGET_ROOTFS_TARGZ=y" .config; then
            echo "错误：配置文件中未启用rootfs.tar.gz生成，请在Target Images中勾选tar.gz"
            exit 1
          fi

      - name: Download packages
        run: |
          cd openwrt/
          make download -j$(nproc)
          find dl -size -1024c -delete

      - name: Compile rootfs
        id: compile
        run: |
          cd openwrt/
          make -j$(nproc) V=s 2>&1 | tee compile.log
          if [[ -d "bin/targets" ]]; then
            echo "status=success" >> ${GITHUB_OUTPUT}
          else
            echo "编译失败，未生成bin目录"
            exit 1
          fi

      - name: Locate rootfs and prepare artifacts
        id: find_rootfs
        if: ${{ steps.compile.outputs.status }} == 'success'
        run: |
          cd openwrt/
          # 查找rootfs文件
          ROOTFS_PATH=$(find bin/targets -name "*rootfs.tar.gz" | head -n 1)
          if [[ -z "${ROOTFS_PATH}" ]]; then
            ROOTFS_PATH=$(find bin/targets -name "*Rootfs.tar.gz" | head -n 1)
          fi

          if [[ -z "${ROOTFS_PATH}" ]]; then
            echo "错误：未找到rootfs文件"
            cat compile.log
            exit 1
          fi

          # 准备输出
          mkdir -p output
          cp ${ROOTFS_PATH} output/
          # 复制实际使用的配置文件（来自您指定的路径）
          cp ${{ env.CONFIG_FILE }} output/config-immortalwrt-used
          cd output
          ROOTFS_FILE=$(basename ${ROOTFS_PATH})
          sha256sum ${ROOTFS_FILE} > ${ROOTFS_FILE}.sha256

          echo "rootfs_path=output/${ROOTFS_FILE}" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload artifacts
        uses: ncipollo/release-action@main
        if: ${{ steps.find_rootfs.outputs.status }} == 'success'
        with:
          tag: ${{ steps.codes.outputs.build_tag }}
          artifacts: |
            ${{ steps.find_rootfs.outputs.rootfs_path }}
            output/${{ steps.find_rootfs.outputs.rootfs_path }}.sha256
            output/config-immortalwrt-used
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### 根文件系统信息
            - 配置文件路径: ${{ env.CONFIG_FILE }}
            - 内核版本: ${{ inputs.openwrt_kernel }}
            - 包含插件: 官方插件 + NueXini_Packages
    
